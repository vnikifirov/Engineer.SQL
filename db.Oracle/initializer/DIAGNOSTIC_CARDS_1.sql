--------------------------------------------------------
--  DDL for Package Body DIAGNOSTIC_CARDS
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "DIAGNOSTIC_CARDS" AS

  procedure CREATE_CONFIRMED_DIAG_CARD(
    P_REG_NUMBER IN CONFIRMED_DIAGNOSTIC_CARD.REG_NUMBER%TYPE,
    P_VALID_TO IN CONFIRMED_DIAGNOSTIC_CARD.VALID_TO%TYPE,
    P_VIN IN CONFIRMED_DIAGNOSTIC_CARD.VIN%TYPE,
    P_BODY_NUMBER IN CONFIRMED_DIAGNOSTIC_CARD.BODY_NUMBER%TYPE,
    P_CHASSIS_NUMBER IN CONFIRMED_DIAGNOSTIC_CARD.CHASSIS_NUMBER%TYPE,
    P_PLATE_NUMBER  IN CONFIRMED_DIAGNOSTIC_CARD.PLATE_NUMBER%TYPE,
    P_CONFIRM_BY IN CONFIRMED_DIAGNOSTIC_CARD.CONFIRM_BY%TYPE,
    P_ID OUT CONFIRMED_DIAGNOSTIC_CARD.ID%TYPE
  ) AS
  BEGIN
    INSERT
    INTO CONFIRMED_DIAGNOSTIC_CARD
      (
        ID,
        VALID_TO ,
        REG_NUMBER ,
        CHASSIS_NUMBER ,
        BODY_NUMBER ,
        VIN ,
        PLATE_NUMBER,
        CONFIRM_BY,
        CONFIRM_DATE
      )
      VALUES
      ( S_CONFIRMED_DIAGNOSTIC_CARD.NEXTVAL ,
        p_VALID_TO ,
        p_REG_NUMBER ,
        p_CHASSIS_NUMBER ,
        p_BODY_NUMBER ,
        p_VIN ,
        p_PLATE_NUMBER,
        P_CONFIRM_BY,
        SYSDATE
      ) returning ID into P_ID;
    COMMIT;
  END CREATE_CONFIRMED_DIAG_CARD;

  procedure UPDATE_CONFIRMED_DIAG_CARD(
    P_ID IN CONFIRMED_DIAGNOSTIC_CARD.ID%TYPE,
    P_REG_NUMBER IN CONFIRMED_DIAGNOSTIC_CARD.REG_NUMBER%TYPE,
    P_VALID_TO IN CONFIRMED_DIAGNOSTIC_CARD.VALID_TO%TYPE,
    P_VIN IN CONFIRMED_DIAGNOSTIC_CARD.VIN%TYPE,
    P_BODY_NUMBER IN CONFIRMED_DIAGNOSTIC_CARD.BODY_NUMBER%TYPE,
    P_CHASSIS_NUMBER IN CONFIRMED_DIAGNOSTIC_CARD.CHASSIS_NUMBER%TYPE,
    P_PLATE_NUMBER  IN CONFIRMED_DIAGNOSTIC_CARD.PLATE_NUMBER%TYPE,
    P_CONFIRM_BY IN CONFIRMED_DIAGNOSTIC_CARD.CONFIRM_BY%TYPE
  ) AS
  BEGIN
    UPDATE CONFIRMED_DIAGNOSTIC_CARD
    set
        VALID_TO = P_VALID_TO,
        REG_NUMBER  = P_REG_NUMBER,
        CHASSIS_NUMBER  = P_CHASSIS_NUMBER,
        BODY_NUMBER  = P_BODY_NUMBER,
        VIN  = P_VIN,
        PLATE_NUMBER  = P_PLATE_NUMBER,
        CONFIRM_BY  = P_CONFIRM_BY,
        CONFIRM_DATE = sysdate
    where ID = P_ID and (
    VALID_TO <> P_VALID_TO or
        REG_NUMBER <> P_REG_NUMBER or
        CHASSIS_NUMBER <> P_CHASSIS_NUMBER or
        BODY_NUMBER <> P_BODY_NUMBER or
        VIN <> P_VIN or
        PLATE_NUMBER <> P_PLATE_NUMBER
    );
    
    commit;

  END UPDATE_CONFIRMED_DIAG_CARD;

  procedure DELETE_CONFIRMED_DIAG_CARD(
    P_ID IN CONFIRMED_DIAGNOSTIC_CARD.ID%TYPE) AS
  BEGIN
    DELETE from CONFIRMED_DIAGNOSTIC_CARD where ID = P_ID;
    COMMIT;
  END DELETE_CONFIRMED_DIAG_CARD;

  procedure GET_CONFIRMED_DIAG_CARDS(
    cur_out OUT sys_refcursor
  ) AS
  BEGIN
    open cur_out for select * from CONFIRMED_DIAGNOSTIC_CARD;
  END GET_CONFIRMED_DIAG_CARDS;
  
  procedure GET_CONFIRMED_DIAG_CARD(
    p_id CONFIRMED_DIAGNOSTIC_CARD.ID%TYPE,
    cur_out OUT sys_refcursor
  ) AS
  BEGIN
    open cur_out for select * from CONFIRMED_DIAGNOSTIC_CARD where id = p_id;
  END GET_CONFIRMED_DIAG_CARD;


  procedure CHECK_CONFIRMED_DIAG_CARD(
    P_VIN IN CONFIRMED_DIAGNOSTIC_CARD.VIN%TYPE,
    P_BODY_NUMBER IN CONFIRMED_DIAGNOSTIC_CARD.BODY_NUMBER%TYPE,
    P_CHASSIS_NUMBER IN CONFIRMED_DIAGNOSTIC_CARD.CHASSIS_NUMBER%TYPE,
    P_PLATE_NUMBER  IN CONFIRMED_DIAGNOSTIC_CARD.PLATE_NUMBER%TYPE,
    CUR_OUT OUT SYS_REFCURSOR
  ) AS
    v_count number;
  BEGIN
    select count(1) into v_count from CONFIRMED_DIAGNOSTIC_CARD where VIN = P_VIN;
    if (v_count > 0) then
      open cur_out for select * from CONFIRMED_DIAGNOSTIC_CARD where VIN = P_VIN;
      return;
    end if;
    
    select count(1) into v_count from CONFIRMED_DIAGNOSTIC_CARD where BODY_NUMBER = P_BODY_NUMBER or CHASSIS_NUMBER = P_CHASSIS_NUMBER;
    if (v_count > 0) then
      open cur_out for select * from CONFIRMED_DIAGNOSTIC_CARD where BODY_NUMBER = P_BODY_NUMBER or CHASSIS_NUMBER = P_CHASSIS_NUMBER;
      return;
    end if;

    select count(1) into v_count from CONFIRMED_DIAGNOSTIC_CARD where PLATE_NUMBER = P_PLATE_NUMBER;
    if (v_count > 0) then
      open cur_out for select * from CONFIRMED_DIAGNOSTIC_CARD where PLATE_NUMBER = P_PLATE_NUMBER;
      return;
    end if;
    
  END CHECK_CONFIRMED_DIAG_CARD;

END DIAGNOSTIC_CARDS;

/
