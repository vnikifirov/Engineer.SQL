-- MySQL Script generated by MySQL Workbench
-- Tue Apr 23 22:11:09 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema db_travel agents
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_travel agents
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_travel agents` DEFAULT CHARACTER SET utf8 ;
USE `db_travel agents` ;

-- -----------------------------------------------------
-- Table `db_travel agents`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_travel agents`.`address` ;

CREATE TABLE IF NOT EXISTS `db_travel agents`.`address` (
  `id_address_pk` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `country` CHAR(16) NOT NULL,
  `city` CHAR(16) NOT NULL,
  `street` CHAR(40) NOT NULL,
  `house_number` CHAR(5) NOT NULL,
  `zip` CHAR(6) NOT NULL,
  PRIMARY KEY (`id_address_pk`),
  UNIQUE INDEX `idaddress_UNIQUE` (`id_address_pk` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 12
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `db_travel agents`.`hotel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_travel agents`.`hotel` ;

CREATE TABLE IF NOT EXISTS `db_travel agents`.`hotel` (
  `id_hotel_pk` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `hotel_name` CHAR(40) NOT NULL,
  `cotegory` TINYINT(5) NOT NULL,
  `id_address_hotel_fk` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id_hotel_pk`),
  UNIQUE INDEX `id_hotel_pk_UNIQUE` (`id_hotel_pk` ASC),
  INDEX `id_address_hotel_fk_idx` (`id_address_hotel_fk` ASC),
  CONSTRAINT `id_address_hotel_fk`
    FOREIGN KEY (`id_address_hotel_fk`)
    REFERENCES `db_travel agents`.`address` (`id_address_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `db_travel agents`.`bill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_travel agents`.`bill` ;

CREATE TABLE IF NOT EXISTS `db_travel agents`.`bill` (
  `id_bill_pk` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `id_hotel_pk` INT(10) UNSIGNED NOT NULL,
  `date_end` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `price` DECIMAL(10,2) UNSIGNED NOT NULL,
  PRIMARY KEY (`id_bill_pk`, `id_hotel_pk`),
  UNIQUE INDEX `id_biil_pk_UNIQUE` (`id_bill_pk` ASC),
  UNIQUE INDEX `id_hotel_pk_UNIQUE` (`id_hotel_pk` ASC),
  INDEX `id_hotel_pk_idx` (`id_hotel_pk` ASC),
  CONSTRAINT `id_hotel_pk`
    FOREIGN KEY (`id_hotel_pk`)
    REFERENCES `db_travel agents`.`hotel` (`id_hotel_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `db_travel agents`.`client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_travel agents`.`client` ;

CREATE TABLE IF NOT EXISTS `db_travel agents`.`client` (
  `id_client_pk` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` CHAR(15) NOT NULL,
  `last_name` CHAR(15) NOT NULL,
  `middle_name` CHAR(15) NOT NULL,
  `phone` CHAR(15) NOT NULL,
  `id_address_client_fk` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id_client_pk`),
  UNIQUE INDEX `id_client_pk_UNIQUE` (`id_client_pk` ASC),
  INDEX `id_address_fk_idx` (`id_address_client_fk` ASC),
  CONSTRAINT `id_address_client_fk`
    FOREIGN KEY (`id_address_client_fk`)
    REFERENCES `db_travel agents`.`address` (`id_address_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `db_travel agents`.`tour`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_travel agents`.`tour` ;

CREATE TABLE IF NOT EXISTS `db_travel agents`.`tour` (
  `id_tour_pk` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `date_start` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `discount` DECIMAL(10,2) UNSIGNED NOT NULL DEFAULT '0.00',
  `id_hotel_fk` INT(10) UNSIGNED NOT NULL,
  `id_client_fk` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id_tour_pk`),
  UNIQUE INDEX `id_tour_pk_UNIQUE` (`id_tour_pk` ASC),
  INDEX `id_hotel_fk_idx` (`id_hotel_fk` ASC),
  INDEX `id_client_fk_idx` (`id_client_fk` ASC),
  CONSTRAINT `id_client_fk`
    FOREIGN KEY (`id_client_fk`)
    REFERENCES `db_travel agents`.`client` (`id_client_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_hotel_fk`
    FOREIGN KEY (`id_hotel_fk`)
    REFERENCES `db_travel agents`.`hotel` (`id_hotel_pk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8;

USE `db_travel agents` ;

-- -----------------------------------------------------
-- Placeholder table for view `db_travel agents`.`v_client_discount`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_travel agents`.`v_client_discount` (`Client` INT, `discount` INT);

-- -----------------------------------------------------
-- Placeholder table for view `db_travel agents`.`v_numbers_clients_in_hotel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_travel agents`.`v_numbers_clients_in_hotel` (`hotel_name` INT, `Num Clients` INT);

-- -----------------------------------------------------
-- Placeholder table for view `db_travel agents`.`v_showpriceanddurationtrips`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_travel agents`.`v_showpriceanddurationtrips` (`id_tour_pk` INT, `date_start` INT, `date_end` INT, `price` INT, `id_client_fk` INT, `id_hotel_fk` INT);

-- -----------------------------------------------------
-- procedure remove_client_by_id
-- -----------------------------------------------------

USE `db_travel agents`;
DROP procedure IF EXISTS `db_travel agents`.`remove_client_by_id`;

DELIMITER $$
USE `db_travel agents`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `remove_client_by_id`(
		 IN id_client INT,
         OUT status CHAR(50))
BEGIN			
        
			DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
			BEGIN 	
				SET status = "Remove operation wasn't executed";										
			END;
        
			DELETE FROM `Travel Agents`.`client`
			WHERE id_client_pk LIKE id_client;																	
			
			SET status = "Changes was successful";			
			SELECT status;			
		END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure spGet_client_by_range_discount
-- -----------------------------------------------------

USE `db_travel agents`;
DROP procedure IF EXISTS `db_travel agents`.`spGet_client_by_range_discount`;

DELIMITER $$
USE `db_travel agents`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `spGet_client_by_range_discount`(
		IN valueFrom DECIMAL,
		IN valueTo DECIMAL)
BEGIN			
	
		SELECT
			CONCAT(
				client.first_name, ' ',
				client.last_name
			) AS 'Client',
			
			tour.discount
			
		FROM
			tour JOIN client ON
				tour.id_client_fk = client.id_client_pk
		GROUP BY
			tour.discount
		HAVING 
			tour.discount BETWEEN valueFrom  AND valueTo;

	END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure spGet_client_hotel_by_name
-- -----------------------------------------------------

USE `db_travel agents`;
DROP procedure IF EXISTS `db_travel agents`.`spGet_client_hotel_by_name`;

DELIMITER $$
USE `db_travel agents`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `spGet_client_hotel_by_name`(
	IN inClient_name CHAR(48))
BEGIN			        
        # START OF SELECT STATMENT    
		SELECT
			CONCAT(
				client.first_name, ' ',
				client.last_name
			) AS 'client',
			            
			hotel.hotel_name, 
			hotel.cotegory,            
			vData.price
				
		FROM
			v_showpriceanddurationtrips vData
				JOIN hotel ON
					vData.id_hotel_fk = hotel.id_hotel_pk
				JOIN client ON 
					vData.id_client_fk = client.id_client_pk
		WHERE CONCAT(
				client.first_name, 
				client.last_name,
				client.middle_name) 
				LIKE inClient_name
		GROUP BY
			vData.price
		ORDER BY
			vData.price DESC;
        # END OF SELECT STATMENT    
        
	END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `db_travel agents`.`v_client_discount`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `db_travel agents`.`v_client_discount` ;
DROP TABLE IF EXISTS `db_travel agents`.`v_client_discount`;
USE `db_travel agents`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `db_travel agents`.`v_client_discount` AS select concat(`db_travel agents`.`client`.`first_name`,' ',`db_travel agents`.`client`.`last_name`) AS `Client`,`db_travel agents`.`tour`.`discount` AS `discount` from (`db_travel agents`.`tour` join `db_travel agents`.`client` on((`db_travel agents`.`tour`.`id_client_fk` = `db_travel agents`.`client`.`id_client_pk`))) group by `db_travel agents`.`tour`.`discount`;

-- -----------------------------------------------------
-- View `db_travel agents`.`v_numbers_clients_in_hotel`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `db_travel agents`.`v_numbers_clients_in_hotel` ;
DROP TABLE IF EXISTS `db_travel agents`.`v_numbers_clients_in_hotel`;
USE `db_travel agents`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `db_travel agents`.`v_numbers_clients_in_hotel` AS select `db_travel agents`.`hotel`.`hotel_name` AS `hotel_name`,count(`db_travel agents`.`tour`.`id_client_fk`) AS `Num Clients` from (`db_travel agents`.`hotel` join `db_travel agents`.`tour`) where (`db_travel agents`.`tour`.`id_hotel_fk` like `db_travel agents`.`hotel`.`id_hotel_pk`) group by `db_travel agents`.`hotel`.`hotel_name`;

-- -----------------------------------------------------
-- View `db_travel agents`.`v_showpriceanddurationtrips`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `db_travel agents`.`v_showpriceanddurationtrips` ;
DROP TABLE IF EXISTS `db_travel agents`.`v_showpriceanddurationtrips`;
USE `db_travel agents`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `db_travel agents`.`v_showpriceanddurationtrips` AS select `db_travel agents`.`tour`.`id_tour_pk` AS `id_tour_pk`,`db_travel agents`.`tour`.`date_start` AS `date_start`,`db_travel agents`.`bill`.`date_end` AS `date_end`,`db_travel agents`.`bill`.`price` AS `price`,`db_travel agents`.`tour`.`id_client_fk` AS `id_client_fk`,`db_travel agents`.`tour`.`id_hotel_fk` AS `id_hotel_fk` from ((`db_travel agents`.`hotel` join `db_travel agents`.`tour` on((`db_travel agents`.`hotel`.`id_hotel_pk` = `db_travel agents`.`tour`.`id_tour_pk`))) join `db_travel agents`.`bill` on((`db_travel agents`.`hotel`.`id_hotel_pk` = `db_travel agents`.`bill`.`id_hotel_pk`)));
USE `db_travel agents`;

DELIMITER $$

USE `db_travel agents`$$
DROP TRIGGER IF EXISTS `db_travel agents`.`hotel_before_delete` $$
USE `db_travel agents`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `db_travel agents`.`hotel_before_delete`
BEFORE DELETE ON `db_travel agents`.`hotel`
FOR EACH ROW
BEGIN
    
		DELETE FROM `travel agents`.bill
        WHERE bill.id_hotel_pk = OLD.id_hotel_pk;
    
		DELETE FROM `travel agents`.tour
        WHERE tour.id_hotel_fk = OLD.id_hotel_pk;
    
    END$$


USE `db_travel agents`$$
DROP TRIGGER IF EXISTS `db_travel agents`.`bill_BEFORE_INSERT` $$
USE `db_travel agents`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `db_travel agents`.`bill_BEFORE_INSERT`
BEFORE INSERT ON `db_travel agents`.`bill`
FOR EACH ROW
BEGIN

	DECLARE mDate_start DATE;
    
    SELECT 
		tour.date_start
	INTO 
		mDate_start
	FROM
		tour
	WHERE
		NEW.id_hotel_pk LIKE tour.id_hotel_fk;

	# Ограничение длительность поездки не превышает 4 недели.
	IF (NEW.date_end >= mDate_start AND 
		NEW.date_end <= DATE_ADD( 
							CURRENT_TIMESTAMP(),
							INTERVAL 4 WEEK ))
    THEN
    
		INSERT INTO `travel agents`.`bill` (
			id_hotel_pk,
            date_end,
            price)
		VALUES (
			NEW.id_hotel_pk,
			NEW.date_end,
            NEW.price);
            
	END IF;
    
END$$


USE `db_travel agents`$$
DROP TRIGGER IF EXISTS `db_travel agents`.`date_limit_BEFORE_INSERT` $$
USE `db_travel agents`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `db_travel agents`.`date_limit_BEFORE_INSERT`
BEFORE INSERT ON `db_travel agents`.`tour`
FOR EACH ROW
BEGIN
	IF (NEW.date_start >= NOW())
    THEN
    
		INSERT INTO `travel agents`.`tour` (
			date_start,
            discount,
            id_hotel_fk,
            id_client_fk)
		VALUES (
			NEW.date_start,
            NEW.discount,
            NEW.id_hotel_fk,
            NEW.id_client_fk);
            
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
